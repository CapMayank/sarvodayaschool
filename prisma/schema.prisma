// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// Add this model at the end of your schema

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// Achievement Model
model Achievement {
  id        Int     @id @default(autoincrement())
  title     String  @unique
  description String
  imageUrl  String
  order     Int     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// SlideShow Model
model SlideShow {
  id        Int     @id @default(autoincrement())
  title     String?
  imageUrl  String
  isActive  Boolean @default(true)
  order     Int     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// News Model
model News {
  id          Int     @id @default(autoincrement())
  title       String
  content     String
  imageUrl    String?
  category    String  @default("General")
  publishDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Admission Form Submission
model AdmissionForm {
  id                      Int     @id @default(autoincrement())
  studentName             String
  gender                  String
  dateOfBirth             DateTime
  fatherName              String
  motherName              String
  mobileNumber            String
  alternateMobile         String?
  class                   String
  district                String
  block                   String
  address                 String
  previousSchool          String?
  status                  String  @default("New")
  notes                   String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

// Teacher Application Submission
model TeacherApplication {
  id        Int      @id @default(autoincrement())
  name      String
  gender    String
  mobileNumber String
  address   String
  district  String
  block     String
  qualifications String
  specialization String
  professionalQualification String
  otherProfessionalQualification String?
  subject   String
  class     String
  experience Int
  status    String   @default("New")
  notes     String?
  resumeUrl String?  // ‚Üê ADD THIS LINE
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Gallery Image Category Management
model GalleryCategory {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  title     String
  description String
  order     Int     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// YouTube Playlist Management
model PlaylistVideo {
  id        Int     @id @default(autoincrement())
  youtubeId String  @unique
  title     String
  order     Int     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

